(()=>{"use strict";class t{constructor(t,e){this._text=t,this._callback=e}onButtonClick(){const t=this._callback;"function"==typeof t&&t()}render(t){if(t){const e=document.createElement("button");e.innerHTML=this._text,t.appendChild(e),e.addEventListener("click",(()=>{this.onButtonClick()}))}}}class e{render(t){const e=document.querySelector(t);e&&(e.innerHTML="")}}class n{constructor({name:t,price:e,img:n},s){this._name=t,this._price=e,this._img=n,this._CartInstance=s}addToCart(){this._CartInstance.add(this)}render(){const e=document.querySelector(".goods-list");if(e){const n=document.createElement("div");n.classList.add("item"),n.innerHTML=`\n            <img src="${this._img}" width="200px" />\n            <p>Item: ${this._name}</p>\n            <span>Price: ${this._price}</span>\n            `,new t("Add to cart",this.addToCart.bind(this)).render(n),e.appendChild(n)}}}class s{constructor({name:t,price:e,img:n}){this._name=t,this._price=e,this._img=n}render(){const t=document.querySelector(".cart-list");if(t){const e=document.createElement("div");e.classList.add("cart-item"),e.innerHTML=`\n            <div>\n                <img src="${this._img}" width="100px" />\n                <p>${this._name}</p>\n            </div>\n            <div class="total">\n                <p>Price: ${this._price}</p>\n                <p>Quantity:${this.counter}</p>\n                <p>Total: ${this._price*this.counter}</p>\n            </div>\n            `,t.appendChild(e)}}}const i=new class extends e{constructor(){super()}add(t){const e=this._items.find((e=>e._name===t._name));e?e.counter++:this._items.push(new s({name:t._name,price:t._price,img:t._img})),this.render()}render(){super.render(".cart-list")}};new class extends e{constructor(t){super(),this._CartInstance=t,this.initShowMoreButton(),this.fetchGoods()}initShowMoreButton(){const t=document.querySelector("#showmore");t&&t.addEventListener("click",(()=>{this._page++,this.fetchGoods()}))}fetchGoods(){const t=`http://localhost:3000/database/catalog${this._page}.json`;return fetch(t).then((t=>t.json())).then((t=>{const e=t.data.map((t=>new n(t,this._CartInstance)));this._items=[...this._items,...e],this.render()}))}render(){super.render(".goods-list")}}(i)})();